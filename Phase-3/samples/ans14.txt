Line:68-> types of `push` function arguments must be string or the type of the second argument must be the same as the type of the elements in the list
Line:71-> types of `push` function arguments must be string or the type of the second argument must be the same as the type of the elements in the list
Line:87-> types of `push` function arguments must be string or the type of the second argument must be the same as the type of the elements in the list
Line:90-> types of `push` function arguments must be string or the type of the second argument must be the same as the type of the elements in the list
Line:93-> types of return expressions of the function `different_return_type1` must be the same
Line:101-> types of return expressions of the function `different_return_type2` must be the same
Line:109-> types of return expressions of the function `different_return_type3` must be the same
Line:117-> types of return expressions of the function `different_return_type4` must be the same
Line:125-> types of return expressions of the function `different_return_type5` must be the same
Line:135-> types of return expressions of the function `different_return_type6` must be the same
Line:156-> types of return expressions of the function `different_return_type7` must be the same
Line:357-> unsupported operand type for operator PLUS
Line:358-> unsupported operand type for operator PLUS
Line:359-> unsupported operand type for operator PLUS
Line:360-> unsupported operand type for operator PLUS
Line:361-> unsupported operand type for operator NOT
Line:362-> unsupported operand type for operator NOT
Line:363-> unsupported operand type for operator NOT
Line:365-> unsupported operand type for operator NOT
Line:368-> unsupported operand type for operator MINUS
Line:369-> unsupported operand type for operator MINUS
Line:370-> unsupported operand type for operator MINUS
Line:371-> operands of operator PLUS must be the same
Line:372-> operands of operator DIVIDE must be the same
Line:373-> operands of operator MULT must be the same
Line:374-> operands of operator GREATER_THAN must be the same
Line:375-> operands of operator LESS_THAN must be the same
Line:376-> operands of operator EQUAL must be the same
Line:377-> operands of operator GREATER_EQUAL_THAN must be the same
Line:378-> operands of operator LESS_EQUAL_THAN must be the same
Line:379-> operands of operator NOT_EQUAL must be the same
Line:384-> only function pointers and functions can be called
Line:387-> only function pointers and functions can be called
Line:388-> operands of operator PLUS must be the same
Line:389-> access index must be integer
Line:390-> only lists and strings can be indexed
Line:391-> unsupported operand type for operator NOT
Line:391-> unsupported operand type for operator PLUS
Line:391-> access index must be integer
Line:402-> only lists and strings can be indexed
Line:403-> operands of operator DIVIDE must be the same
Line:403-> access index must be integer
Line:404-> access index must be integer
Line:417-> only lists can be iterated over
Line:419-> only lists can be iterated over
Line:421-> only lists can be iterated over
Line:430-> operands of operator PLUS must be the same
Line:434-> operands of operator PLUS must be the same
Line:438-> operands of operator PLUS must be the same
Line:442-> operands of operator PLUS must be the same
Line:446-> operands of operator PLUS must be the same
Line:452-> operands of operator PLUS must be the same
Line:458-> operands of operator PLUS must be the same
Line:464-> operands of operator PLUS must be the same
Line:470-> operands of operator PLUS must be the same
Line:476-> operands of operator PLUS must be the same
Line:481-> operands of operator PLUS must be the same
Line:484-> types of begin and end of ranges can only be integer
Line:485-> types of begin and end of ranges can only be integer
Line:486-> types of begin and end of ranges can only be integer
Line:491-> all elements of the list must have same type
Line:492-> all elements of the list must have same type
Line:493-> all elements of the list must have same type
Line:503-> operands of operator MULT must be the same
Line:505-> operands of operator MULT must be the same
Line:512-> type of `len` function argument must be list or string
Line:517-> type of `len` function argument must be list or string
Line:523-> condition's type must be boolean
Line:528-> condition's type must be boolean
Line:534-> type of `len` function argument must be list or string
Line:537-> type of `len` function argument must be list or string
Line:540-> condition's type must be boolean
Line:542-> condition's type must be boolean
Line:544-> condition's type must be boolean
Line:546-> condition's type must be boolean
Line:548-> condition's type must be boolean
Line:555-> operands of operator MULT must be the same
Line:562-> type of `len` function argument must be list or string
Line:568-> condition's type must be boolean
Line:574-> type of `len` function argument must be list or string
Line:585-> all elements of the list must have same type
Line:586-> access index must be integer
Line:587-> access index must be integer
Line:587-> all elements of the list must have same type
Line:588-> only lists and strings can be indexed
Line:589-> all elements of the list must have same type
Line:596-> condition's type must be boolean
Line:599-> condition's type must be boolean
Line:602-> condition's type must be boolean
Line:609-> only lists and strings can get pushed into
Line:610-> only lists and strings can get pushed into
Line:611-> only lists and strings can get pushed into
Line:612-> only lists and strings can get pushed into
Line:618-> types of `push` function arguments must be string or the type of the second argument must be the same as the type of the elements in the list
Line:621-> types of `push` function arguments must be string or the type of the second argument must be the same as the type of the elements in the list
Line:624-> types of `push` function arguments must be string or the type of the second argument must be the same as the type of the elements in the list
Line:625-> types of `push` function arguments must be string or the type of the second argument must be the same as the type of the elements in the list
Line:626-> types of `push` function arguments must be string or the type of the second argument must be the same as the type of the elements in the list
Line:649-> all elements of the list must have same type
Line:650-> all elements of the list must have same type
Line:651-> all elements of the list must have same type
Line:652-> all elements of the list must have same type
Line:658-> only lists and strings can get appended into
Line:659-> only lists and strings can get appended into
Line:660-> only lists and strings can get appended into
Line:661-> only lists and strings can get appended into
Line:684-> type of `len` function argument must be list or string
Line:685-> type of `len` function argument must be list or string
Line:686-> type of `len` function argument must be list or string
Line:689-> type of `len` function argument must be list or string
